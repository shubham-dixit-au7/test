Question 1) Using the recursive fibonacci number function, print first n fibonacci numbers. (Any Answer containing loops will not be checked)

Answer- Python Code(File- Ques1-Fibonacci.py)-
					def fab(n):
					  if n == 0:
					    return 0
					  elif n == 1:
					    return 1
					  else:
					    return fab(n - 1) + fab(n - 2)

					n = int(input())
					for i in range(n + 1):
					  if i < n:
					    print(fab(i), end = ", ")
					  else:
					    print(fab(i))

				

Question 2) https://www.hackerearth.com/practice/basic-programming/recursion/recursion-and-backtracking/practice-problems/algorithm/n-queensrecursion-tutorial/

Answer- Python Code(File- Ques2.py)-
						N = int(input('Board size: '))
						board = [[0]*N for x in range(N)]
						def is_attacked(row,col):
						    for i in range(0,N):
						        if board[row][i] == 1 or board[i][col] == 1:
						            return True
						    for i in range(0,N):
						        for j in range(0,N):
						            if((row+col)==(i+j)) or ((row-col)==(i-j)):
						                if board[i][j] == 1:
						                    return True
						    return False

						def n_queen(n):

						    if n==0:
						        return True
						    for i in range(0,N):
						        for j in range(0,N):
						            if (not is_attacked(i,j)) and (board[i][j]!=1):
						                board[i][j] = 1
						                if n_queen(n-1)==True:
						                    return True
						                board[i][j] = 0
						    return False
						 
						 
						if n_queen(N) == False:
						    print("Not possible")
						else:
						    for i in range(N):
						            for j in range(N):
						                print (board[i][j], end = " ") 
						            print()
				