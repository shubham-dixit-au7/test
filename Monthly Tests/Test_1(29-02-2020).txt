Question- Thanos Vs Tony Stark

Answer- Python Code-
                import sys

                def cost(str):
                    strength = 1
                    damage = 0
                    for element in str:
                        if(element == 'C'):
                            strength = strength * 2
                        if(element == 'S'):
                            damage = damage + strength
                    return damage

                def findPattern(str):
                    j = len(str) - 1
                    while(j > 0):
                        if(str[j] == 'S' and str[j-1] == 'C'):
                            return j
                        j = j-1
                    return -1

                def interChange(val, str, damage):
                    ans = -1;
                    j = len(str) - 1
                    test = 0
                    
                    while(test != -1 and damage > val):
                        test = findPattern(str)
                        text = str[:test-1] + 'S' + 'C'+ str[test+1:]
                        str = text
                        if(ans == -1):
                            ans = 1
                        else:
                            ans = ans + 1
                        damage = cost(str)
                    if(test == -1):
                        return -1
                    else:
                        return ans        

                for line in sys.stdin:
                    word = line.split(" ")
                    value = int(word[0])
                    if(len(word) == 1):
                        continue
                    damage = cost(word[1])
                    if(damage <= value):
                        print(0)
                    else:
                        answer = interChange(value, word[1], damage)
                        if(answer == -1):
                            print("IMPOSSIBLE") 
                        else:
                            print(answer)






Question 2- Giant Numbers.

Answer- Python Code-
                def multiply(inputLst):
                    if(inputLst[0] == 0 or inputLst[1] == 0):
                        return 0
                    else:
                        return inputLst[0] * inputLst[1]
                inputLst = list(map(int,input().split()))
                result = multiply(inputLst)
                print(result)


Question 3- Remove Duplicates in Linked List.

Answer- Python Code-
                class Node:
                    def __init__(self, data):
                        self.data = data
                        self.next = None

                class LinkedList:
                    def __init__ (self):
                        self.head = None
                        self.end = None
                    
                    def append(self, data):
                        if self.end is not None:
                            self.end.next = Node(data)
                            self.end = self.end.next
                        else:
                            self.head = Node(data)
                            self.end = self.head
                            
                    def prevNode(self, node):
                        cNode = self.head
                        while(cNode and cNode.next != node):
                            cNode = cNode.next
                        return cNode
                    
                    def remove(self, node):
                        pNode =self.prevNode(node)
                        if pNode is not None:
                            pNode.next = node.next
                        else:
                            self.head =self.head.next
                    
                    def disp(self):
                        cNode = self.head
                        while cNode:
                            print(cNode.data, end=' ')
                            cNode = cNode.next
                            
                def delDuplicate(linkLst):
                    cNode = linkLst.head
                    while cNode:
                        data = cNode.data
                        nNode = cNode.next
                        while nNode:
                            if (nNode.data == data):
                                linkLst.remove(nNode)
                            nNode = nNode.next
                        cNode = cNode.next

                        
                linkLst = LinkedList()
                inputLst= list(map(int,input().split()))
                for i in inputLst:
                    linkLst.append(i)
                delDuplicate(linkLst)
                linkLst.disp()


Question 4- College Library in trouble.

Answer- Python Code-
                def totalPages(inputLst, n, students):
                    if(n < students):
                        return -1
                    
                    pageSum , result = 0, 1000000000
                    for i in range(n):
                        pageSum += inputLst[i]
                    begin = 0
                    end = pageSum
                    
                    #binary search
                    while(begin <= end):
                        mid =(begin +end)//2
                        if(condition(inputLst, n, students, mid)):
                            result = min(result, mid)
                            end = mid-1
                        else:
                            begin = mid+1
                    return result

                def condition(inputLst, n, students, mid):
                    sum, count = 0, 1
                    for i in range(n):
                        if (sum+ inputLst[i] > mid):
                            count += 1
                            sum = inputLst[i]
                            if(count >students):
                                return False
                        else:
                            sum += inputLst[i]
                        if (inputLst[i] > mid):
                            return False
                    return True

                inputLst = list(map(int, input().split()))
                n = len(inputLst)
                print(n)
                students = int(input())
                result = totalPages(inputLst, n, students)
                print(result)


Question 5- World War 3.

Answer- Python Code-
                def damagedArea(inputLst,n):
                    stack = [-1]
                    maxArea = 0
                    baseArea = 600

                    for i in range(n):
                        while stack[-1] != -1 and inputLst[stack[-1]] >= inputLst[i]:
                            lstElemInd = stack.pop()
                            maxArea = max(maxArea, inputLst[lstElemInd] * (i - stack[-1] - 1))
                        stack.append(i)
                    while stack[-1] != -1:
                        lstElemInd = stack.pop()
                        maxArea = max(maxArea, inputLst[lstElemInd] * (n - stack[-1] - 1))
                    return maxArea * baseArea


                  
                inputLst = list(map(int,input().split()))
                n = len(inputLst) 
                result = damagedArea(inputLst, n)
                print(result)




Question 6- All Built Ins.

Answer- Python Code-
               import sys


                def split(word): 
                    return [char for char in word] 

                ar=list()
                n=input()
                n1=input()
                n_ar=n1.strip().split(" ")
                for i in sys.stdin:
                    #print(input())
                    val=i.strip().split(" ")
                    cmd=val[0]
                    #print(cmd)
                    if(cmd=="separate"):
                        val1=val[2]
                        temp = n_ar.copy()
                        str1 = val1.join(str(a) for a in temp)
                        print(str1)
                    if(cmd=="sort" and n == "list"):
                        temp = n_ar.copy()
                        for i in range(len(temp)):
                            temp[i] = int(temp[i])
                        temp.sort()
                        #print(temp)
                        str1 = ' '.join(str(a) for a in temp)
                        print(str1)
                    if(cmd=="sort" and n == "string"):
                        temp = split(n1)
                        #print(temp)
                        temp = sorted(temp, key=str.lower)
                        #print(temp)
                        str1 = ''.join(str(a) for a in temp)
                        print(str1)
                    if(cmd=="all"):
                        temp = n_ar.copy()
                        #print(temp)
                        str1 = ' '.join(str(a.upper()) for a in temp)
                        print(str1)
                    if(cmd=="isdigit"):
                        temp = n1.isdigit()
                        print(temp)
                    if(cmd=="find"):
                        temp = n1.find(val[1])
                        print(temp)
                    if(cmd=="reverse" and n == "list"):
                        temp = n_ar.copy()
                        temp.reverse()
                        str1 = ' '.join(str(a) for a in temp)
                        print(str1)
                    if(cmd=="reverse" and n == "string"):
                        #temp = n1.copy()
                        #n1.reverse()
                        print(n1[::-1])
                        #n1.reverse()
                    if(cmd=="append"):
                        val1=int(val[1])
                        temp = n_ar.copy()
                        temp.append(val1) 
                        str1 = ' '.join(str(a) for a in temp)
                        print(str1)
                    if(cmd=="insert"):
                        pos=int(val[2])
                        val=int(val[1])
                        temp = n_ar.copy()
                        temp.insert(pos,val)
                        str1 = ' '.join(str(a) for a in temp)
                        print(str1)

                    
                    line6 = input()
                    if(line6 == 'isdigit'):
                        print(line2.isdigit())
                    
                    line7 =list(input().split())
                    if(line7[0] == 'find'):
                        print(line2.find(line7[1]))
                        
                        
                elif(line1 == 'list'):
                    line2 = list(map(int, input().split()))
                    
                    #append
                    line3 = list(input().split())
                    if(line3[0] == 'append'):
                        tempList = line2
                        tempList.append(int(line3[1]))
                        print(tempList)
                    
                    #reverse
                    line4 = input()
                    if(line4 == 'reverse'):
                        tempList = reversal(line2)
                        print(tempList)
                        
                    #sort
                    line5 = input()
                    if(line5 =='sort'):
                        tempList = line2
                        tempList.sort()
                        print(tempList)